/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient.care;

import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author kdieg
 */
public class PatientsForm extends javax.swing.JFrame {

    /**
     * Creates new form PatientsForm
     * @param patients
     */
    
    public void fillComboPatients(ArrayList<Patient> patients){
      
        comboPatients.removeAllItems();
        comboPatients.addItem("Seleccionar"); 
        for(Patient patient: patients){
          comboPatients.addItem(patient.getName());
        }
    }
    
    /**
     *
     * @param doctors
     */
    public void fillComboDoctors(ArrayList<Doctor> doctors){
        comboDoctors.removeAllItems();
        comboDoctors.addItem("Seleccionar");
        for(Doctor d: doctors){
            comboDoctors.addItem(d.getName());
        }
    }
    
    /**
     *
     */
    public void listBoxes(){
        boxesList.setText("");
        for(Box b : BoxDAO.boxList()){
            boxesList.append(b.toString() + "\n");
        }
    }

    /**
     *
     */
    public void clear(){
        txtBoxNumber.setText("");
        txtAttentionNumber.setText("");
        comboPatients.setSelectedIndex(0);
        comboDoctors.setSelectedIndex(0);
        txtBoxDate.setText("");
        stxSpeciality.setText("Especialidad:");
        checkTreatment.setSelected(false);
    }
    
    /**
     *
     */
    public PatientsForm() {
        initComponents();
        DoctorDAO.fillDoctors();
        PatientDAO.fillPatients();
        fillComboDoctors(DoctorDAO.doctorList());
        fillComboPatients(PatientDAO.patientList());
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        stxDoctor = new javax.swing.JLabel();
        stxPatient = new javax.swing.JLabel();
        txtPatientRut = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtBoxNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboPatients = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        comboDoctors = new javax.swing.JComboBox<>();
        stxSpeciality = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        boxesList = new javax.swing.JTextArea();
        btnRegister = new javax.swing.JButton();
        checkTreatment = new javax.swing.JCheckBox();
        txtBoxDate = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAttentionNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stxDoctor.setText("Seleccionar Doctor:");

        stxPatient.setText("Rut Paciente:");

        txtPatientRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientRutActionPerformed(evt);
            }
        });

        jLabel1.setText("Número de box:");

        txtBoxNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxNumberActionPerformed(evt);
            }
        });
        txtBoxNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBoxNumberKeyTyped(evt);
            }
        });

        jLabel2.setText("Fecha de atención:");

        comboPatients.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboPatients.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPatientsItemStateChanged(evt);
            }
        });
        comboPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPatientsActionPerformed(evt);
            }
        });

        btnEdit.setText("Editar box");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar box");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar box");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnList.setText("Listar Box");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        comboDoctors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDoctorsActionPerformed(evt);
            }
        });

        stxSpeciality.setText("Especialidad: ");

        boxesList.setColumns(20);
        boxesList.setRows(5);
        jScrollPane2.setViewportView(boxesList);

        btnRegister.setText("Registrar");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        checkTreatment.setText("En tratamiento");
        checkTreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTreatmentActionPerformed(evt);
            }
        });

        txtBoxDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jLabel3.setText("Número Atención:");

        txtAttentionNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAttentionNumberActionPerformed(evt);
            }
        });
        txtAttentionNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAttentionNumberKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnRegister)
                        .addGap(23, 23, 23)
                        .addComponent(btnEdit)
                        .addGap(19, 19, 19)
                        .addComponent(btnDelete)
                        .addGap(21, 21, 21)
                        .addComponent(btnSearch)
                        .addGap(25, 25, 25)
                        .addComponent(btnList))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stxPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stxDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(checkTreatment))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtAttentionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBoxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPatientRut, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(comboDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(comboPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(stxSpeciality)))))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtAttentionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1))
                    .addComponent(txtBoxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stxPatient)
                    .addComponent(comboPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stxDoctor)
                    .addComponent(comboDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stxSpeciality))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkTreatment))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnSearch)
                    .addComponent(btnList))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientRutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientRutActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        String rut = "", doctorName = "";
        Date date = null;
        int boxNumber, attentionNumber;
        Doctor doctor = null;
        Patient patient = null;
        Box box = null;
        if(!txtPatientRut.getText().equals("") && 
                comboDoctors.getSelectedIndex() != 0 &&
                !txtBoxNumber.getText().equals("") &&
                !txtAttentionNumber.getText().equals("") &&
                !txtBoxDate.getText().equals(""))
        {
            rut = txtPatientRut.getText();
            patient = PatientDAO.search(rut);
            doctorName = String.valueOf(comboDoctors.getSelectedItem());
            doctor = DoctorDAO.findByName(doctorName);
            date = new Date(txtBoxDate.getText());
            patient.setLastAttention(date);
            patient.setInTreatment(checkTreatment.isSelected());
            boxNumber = Integer.parseInt(txtBoxNumber.getText());
            attentionNumber = Integer.parseInt(txtAttentionNumber.getText());
            box = new Box(patient, doctor, boxNumber, attentionNumber);
            if(!date.fechaCorrecta()){
                JOptionPane.showMessageDialog(null, "Fecha incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }else if (PatientDAO.search(rut) == null){
                JOptionPane.showMessageDialog(null, "Paciente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(BoxDAO.create(box)){
                clear();
                JOptionPane.showMessageDialog(null, "Paciente registrado", "REgistrado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Box Ingresado no válido o paciente ya asignado", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe completar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void txtBoxNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxNumberActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtBoxNumberActionPerformed

    private void txtBoxNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxNumberKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtBoxNumberKeyTyped

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String rut = "", doctorName = "";
        Date date = null;
        int boxNumber, attentionNumber;
        Doctor doctor = null;
        Patient patient = null;
        Box box = null;
        if(!txtPatientRut.getText().equals("") && 
                comboDoctors.getSelectedIndex() != 0 &&
                !txtBoxNumber.getText().equals("") &&
                !txtAttentionNumber.getText().equals("") &&
                !txtBoxDate.getText().equals(""))
        {
            rut = txtPatientRut.getText();
            patient = PatientDAO.search(rut);
            doctorName = String.valueOf(comboDoctors.getSelectedItem());
            doctor = DoctorDAO.findByName(doctorName);
            date = new Date(txtBoxDate.getText());
            boxNumber = Integer.parseInt(txtBoxNumber.getText());
            attentionNumber = Integer.parseInt(txtAttentionNumber.getText());
            patient.setInTreatment(checkTreatment.isSelected());
            patient.setLastAttention(date);
            box = new Box(patient, doctor, boxNumber, attentionNumber);
            if(!date.fechaCorrecta()){
                JOptionPane.showMessageDialog(null, "Fecha incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(BoxDAO.update(box)){
                clear();
                JOptionPane.showMessageDialog(null, "Box editado", "Editado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Box Ingresado no válido o paciente ya asignado", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe completar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
     
        int boxNumber;
        
        if(!txtBoxNumber.getText().equals(""))
        {
            boxNumber = Integer.parseInt(txtBoxNumber.getText());
            if(BoxDAO.delete(boxNumber)){
                clear();
                JOptionPane.showMessageDialog(null, "Box Eliminado", "Eliminado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Box Ingresado no existe", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe Ingresar número de Box", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        // TODO add your handling code here:
        listBoxes();
    }//GEN-LAST:event_btnListActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String rut = "", doctorName = "";
        Date date = null;
        int attentionNumber;
        Doctor doctor = null;
        Patient patient = null;
        Box box = null;
        if(!txtAttentionNumber.getText().equals(""))
        {
            attentionNumber = Integer.parseInt(txtAttentionNumber.getText());
            box = BoxDAO.search(attentionNumber);
            if(box != null)
            {
                rut = box.getPatient().getRut();
                txtPatientRut.setText(rut);
                comboPatients.setSelectedItem(box.getPatient().getName());
                comboDoctors.setSelectedItem(box.getDoctor().getName());
                txtBoxDate.setText(box.getPatient().getLastAttention().toString());
                txtBoxNumber.setText(String.valueOf(box.getNumber()));
                checkTreatment.setSelected(box.getPatient().isInTreatment());
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe Ingresar Número de Box", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void checkTreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTreatmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTreatmentActionPerformed

    private void txtAttentionNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAttentionNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAttentionNumberActionPerformed

    private void comboPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPatientsActionPerformed
        // TODO add your handling code here:
        Patient patient = null;
        if(comboPatients.getSelectedIndex() != 0){
            patient = PatientDAO.findByName(String.valueOf(comboPatients.getSelectedItem()));
            if(patient != null){
                txtPatientRut.setText(patient.getRut());
            }
        }else{
            txtPatientRut.setText("");
        }
    }//GEN-LAST:event_comboPatientsActionPerformed

    private void comboPatientsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPatientsItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comboPatientsItemStateChanged

    private void comboDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDoctorsActionPerformed
        // TODO add your handling code here:
        Doctor doctor = null;
        if(comboDoctors.getSelectedIndex() != 0){
            doctor = DoctorDAO.findByName(String.valueOf(comboDoctors.getSelectedItem()));
            if(doctor != null){
                stxSpeciality.setText("Especialidad: "+ doctor.getSpeciality());
            }
        }else{
            stxSpeciality.setText("Especialidad: ");
        }
    }//GEN-LAST:event_comboDoctorsActionPerformed

    private void txtAttentionNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAttentionNumberKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAttentionNumberKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea boxesList;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkTreatment;
    private javax.swing.JComboBox<String> comboDoctors;
    private javax.swing.JComboBox<String> comboPatients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel stxDoctor;
    private javax.swing.JLabel stxPatient;
    private javax.swing.JLabel stxSpeciality;
    private javax.swing.JTextField txtAttentionNumber;
    private javax.swing.JFormattedTextField txtBoxDate;
    private javax.swing.JTextField txtBoxNumber;
    private javax.swing.JTextField txtPatientRut;
    // End of variables declaration//GEN-END:variables
}
